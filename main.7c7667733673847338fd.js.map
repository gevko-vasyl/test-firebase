{"version":3,"sources":["webpack:///./index.js"],"names":["signIn","document","querySelector","signOut","userInfo","readUserData","userId","firebase","database","ref","once","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","addEventListener","provider","auth","GoogleAuthProvider","signInWithPopup","then","result","credential","accessToken","user","uid","name","displayName","email","imageUrl","photoURL","console","log","currentUser","checkUserID","data","exists","set","username","profile_picture","error","writeUserData","catch","code","errorMessage","message","window","location","href","innerHTML","onAuthStateChanged"],"mappings":"kHAAA,iCAgBMA,GAhBN,oBAgBeC,SAASC,cAAc,aAChCC,EAAUF,SAASC,cAAc,aACjCE,EAAWH,SAASC,cAAc,cAwGxC,SAASG,EAAaC,GAClB,OAAOC,IAASC,WAAWC,IAAI,UAAYH,GAAQI,KAAK,SAtG5DH,IAASI,cAhBc,CACrBC,OAAQ,0CACRC,WAAY,6BACZC,YAAa,iDACbC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAUjBnB,EAAOoB,iBAAiB,SAuBxB,WACI,IAAMC,EAAW,IAAId,IAASe,KAAKC,mBACnChB,IAASe,OAAOE,gBAAgBH,GAC3BI,MAAK,SAACC,GACgBA,EAAOC,WAEDC,YAFzB,IAIMC,EAAOH,EAAOG,KACdvB,EAASuB,EAAKC,IACdC,EAAOF,EAAKG,YACZC,EAAQJ,EAAKI,MACbC,EAAWL,EAAKM,SAEtBC,QAAQC,IAAIR,GACZO,QAAQC,IAAI,YAuCxB,WACI,IAAM/B,EAASC,IAASe,OAAOgB,YAAYR,IAC3C,OAAOvB,IAASC,WAAWC,IAAI,UAAYH,GAAQI,KAAK,SAtChD6B,GAAcd,MAAK,SAACe,GACZA,EAAKC,UACLL,QAAQC,IAAI,0BAEZhC,EAAaC,KAEb8B,QAAQC,IAAI,8BAqChC,SAAuB/B,EAAQyB,EAAME,EAAOC,GACxC3B,IAASC,WAAWC,IAAI,SAAWH,GAAQoC,IAAI,CAC3CC,SAAUZ,EACVE,MAAOA,EACPW,gBAAkBV,IACnB,SAACW,GACIA,EACAT,QAAQC,IAAI,aAEZD,QAAQC,IAAI,cA7CJS,CAAcxC,EAAQyB,EAAME,EAAOC,UAI5Ca,OAAM,SAACF,GAEYA,EAAMG,KAAxB,IACMC,EAAeJ,EAAMK,QAEbL,EAAMZ,MAEDY,EAAMlB,WACzBS,QAAQC,IAAIY,GACZb,QAAQC,IAAI,iBA5DxBlC,EAAQiB,iBAAiB,SAgEzB,WACIb,IAASe,OAAOnB,UAAUsB,MAAK,WAC3BW,QAAQC,IAAI,wBACZc,OAAOC,SAASC,KAAO,aACvBjD,EAASkD,UAAY,MAEtBP,OAAM,SAACF,GACNT,QAAQC,IAAI,iBApEhB9B,IAASe,OAAOiC,oBAAmB,SAAU1B,GACzC,GAAIA,EAAM,CAEN,IAAMG,EAAcH,EAAKG,YACnBG,EAAWN,EAAKM,SAEhBL,GADQD,EAAKI,MACPJ,EAAKC,KACjB1B,EAASkD,UAAT,8BAAmDnB,EAAnD,qBACIH,EADJ,OAEAI,QAAQC,IAAR,iBAA6BL,EAA7B,WAAuDF,GACvDzB,EAAayB,QAGb1B,EAASkD,UAAY,Q","file":"main.7c7667733673847338fd.js","sourcesContent":["import './styles.css';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB_XQuuXpnCVMzsoH_tRJd_Re2w7D-8sJE\",\r\n  authDomain: \"test-ec373.firebaseapp.com\",\r\n  databaseURL: \"https://test-ec373-default-rtdb.firebaseio.com\",\r\n  projectId: \"test-ec373\",\r\n  storageBucket: \"test-ec373.appspot.com\",\r\n  messagingSenderId: \"655424318049\",\r\n  appId: \"1:655424318049:web:e8ade1934133d874e6d820\",\r\n  measurementId: \"G-RN92T8LBYY\"\r\n};\r\n\r\nconst signIn = document.querySelector('#sign_in');\r\nconst signOut = document.querySelector('#sign_out');\r\nconst userInfo = document.querySelector('.user-info');\r\n\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nsignIn.addEventListener('click', googleSignIn);\r\nsignOut.addEventListener('click', googleSignOut);\r\n\r\nfunction initApp() {\r\n    firebase.auth().onAuthStateChanged(function (user) {\r\n        if (user) {\r\n            // SIGN IN\r\n            const displayName = user.displayName;\r\n            const photoURL = user.photoURL;\r\n            const email = user.email;\r\n            const uid = user.uid;\r\n            userInfo.innerHTML = `<img class=\"user-img\" src=\"${photoURL}\">\r\n           <p>${displayName}</p>`;\r\n            console.log(`Current user: ${displayName}`, `userId: ${uid}`);\r\n            readUserData(uid)\r\n        } else {\r\n            // SIGN OUT\r\n            userInfo.innerHTML = '';\r\n        }\r\n    \r\n    })\r\n};\r\n\r\nfunction googleSignIn() {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    firebase.auth().signInWithPopup(provider)\r\n        .then((result) => {\r\n            const credential = result.credential;\r\n            // This gives you a Google Access Token. You can use it to access the Google API. \r\n            const token = credential.accessToken;\r\n            // The signed-in user info.\r\n            const user = result.user;\r\n            const userId = user.uid;\r\n            const name = user.displayName;\r\n            const email = user.email;\r\n            const imageUrl = user.photoURL;\r\n\r\n            console.log(user);\r\n            console.log(\"Success!\");\r\n            \r\n            // Перевірка чи є вже юзер в БД, якшо неа то добавляє\r\n            checkUserID().then((data) => {\r\n                if (data.exists()) {\r\n                    console.log('User exist in database');\r\n                    // Завантажує данні з БД\r\n                    readUserData(userId);\r\n                } else {\r\n                    console.log('User NOT exist in database');\r\n                    writeUserData(userId, name, email, imageUrl);\r\n                }\r\n            });\r\n\r\n        }).catch((error) => {\r\n            // Handle Errors here.\r\n            const errorCode = error.code;\r\n            const errorMessage = error.message;\r\n            // The email of the user's account used.\r\n            const email = error.email;\r\n            // The firebase.auth.AuthCredential type that was used.\r\n            const credential = error.credential;\r\n            console.log(errorMessage);\r\n            console.log(\"Failed!\");\r\n        });\r\n};\r\n\r\nfunction googleSignOut() {\r\n    firebase.auth().signOut().then(() => {\r\n        console.log('Sign-out successful.');\r\n        window.location.href = 'index.html';\r\n        userInfo.innerHTML = '';\r\n\r\n    }).catch((error) => {\r\n        console.log('ERRROR!');\r\n    });\r\n};\r\n\r\n// ОТРИМУЄ ДАННІ ЮЗЕРА ПО АЙДІ З БД\r\nfunction checkUserID() {\r\n    const userId = firebase.auth().currentUser.uid;\r\n    return firebase.database().ref('/users/' + userId).once('value');\r\n};\r\n\r\n// ЗАПИСУЄ ОСНОВНУ ІНФУ ПО ЮЗЕР В БД, ТІЛЬКИ ПРИ РЕЄСТРАЦІЇ ПЕРШОМУ ВХОДІ\r\n\r\nfunction writeUserData(userId, name, email, imageUrl) {\r\n    firebase.database().ref('users/' + userId).set({\r\n        username: name,\r\n        email: email,\r\n        profile_picture : imageUrl\r\n    }, (error) => {\r\n        if (error) {\r\n            console.log('FAILED!!!');\r\n        } else {\r\n            console.log('SUCCESS');\r\n        };\r\n            \r\n    });\r\n};\r\n\r\nfunction readUserData(userId) {\r\n    return firebase.database().ref('/users/' + userId).once('value');\r\n}\r\n\r\ninitApp();"],"sourceRoot":""}